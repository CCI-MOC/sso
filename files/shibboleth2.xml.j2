<!--
This is an example shibboleth2.xml generated for you by TestShib.  It's reduced and recommended
specifically for testing.  You don't need to change anything, but you may want to explore the file
to learn about how your SP works.  Uncomment attributes in your attribute-map.xml file to test them.

If you want to test advanced functionality, start from the distribution shibboleth2.xml and add the
MetadataProvider, the right entityID, and a properly configured SSO element.  More information:

https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPConfiguration
-->

<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config" xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    clockSkew="1800">

    <!-- The entityID is the name TestShib made for your SP. -->
    <ApplicationDefaults entityID="https://sso.massopen.cloud/incommon/shibboleth">

        <!-- You should use secure cookies if at all possible.  See cookieProps in this Wiki article. -->
        <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPSessions -->
        <Sessions lifetime="28800" timeout="3600" checkAddress="false" relayState="ss:mem" handlerSSL="false">

            <!-- Triggers a login request directly to the TestShib IdP. -->
            <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPServiceSSO -->
            <SSO discoveryProtocol="WAYF" discoveryURL="https://wayf.incommonfederation.org/DS/WAYF">
                SAML2 SAML1
            </SSO>

            <!-- SAML and local-only logout. -->
            <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPServiceLogout -->
            <Logout>SAML2 Local</Logout>

            <!--
                Handlers allow you to interact with the SP and gather more information.  Try them out!
                Attribute values received by the SP through SAML will be visible at:
                http://http@-HOSTNAME-@72@-HOSTNAME-@57@-HOSTNAME-@57128.31.25.69@-HOSTNAME-@725000/Shibboleth.sso/Session
            -->

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="127.0.0.1 ::1"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="true"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>

        </Sessions>

        <!-- Error pages to display to yourself if something goes horribly wrong. -->
        <Errors supportContact="root@localhost" logoLocation="/shibboleth-sp/logo.jpg"
                styleSheet="/shibboleth-sp/main.css"/>

        <!--
  The following MetadataProvider attempts to refresh the InCommon
  IdP-only metadata aggregate every hour.
  
  The discovery interface relies primarily on mdui:DisplayName.
  To fall back on md:OrganizationDisplayName if mdui:DisplayName
  is missing from IdP metadata, add legacyOrgNames="true" to the
  MetadataProvider element as shown below.
-->
<MetadataProvider type="XML"
    url="http://md.incommon.org/InCommon/InCommon-metadata-idp-only.xml"
    backingFilePath="InCommon-metadata-idp-only.xml"
    maxRefreshDelay="3600"
    legacyOrgNames="true">
 
  <!--
    To bootstrap the trust fabric of the federation, each relying party
    obtains and configures an authentic copy of the federation operatorâ€™s
    Metadata Signing Certificate (https://spaces.internet2.edu/x/moHFAg).
  
    Fetch the InCommon Metadata Signing Certificate and check its integrity:
  
    $ /usr/bin/curl -s https://ds.incommon.org/certs/inc-md-cert.pem \
        | /usr/bin/tee inc-md-cert.pem \
        | /usr/bin/openssl x509 -sha1 -fingerprint -noout
    SHA1 Fingerprint=7D:B4:BB:28:D3:D5:C8:52:E0:80:B3:62:43:2A:AF:34:B2:A6:0E:DD
  
    Verify the signature on the root element of the metadata aggregate
    (i.e., the EntitiesDescriptor element) using the trusted Metadata
    Signing Certificate.
  
    A large metadata file can cause a significant increase in startup
    time at the SP. This is due to the time it takes to verify the
    signature on the metadata, which is known to increase exponentially
    as the size of the metadata file increases. To disable signature
    verification at startup time only, add verifyBackup="false" to the
    MetadataFilter element below.
  -->
  <MetadataFilter type="Signature" certificate="inc-md-cert.pem"/>
 
  <!--
    Require a validUntil XML attribute on the EntitiesDescriptor element
    and make sure its value is no more than 14 days into the future
  -->
  <MetadataFilter type="RequireValidUntil" maxValidityInterval="1209600"/>
  <!--
    Consume all IdP metadata in the aggregate. TIP: If the SP supports
    SAML2 Web Browser SSO only, the md:AttributeAuthorityDescriptor
    elements in IdP metadata can be ignored.
  -->
  <MetadataFilter type="EntityRoleWhiteList">
    <RetainedRole>md:IDPSSODescriptor</RetainedRole>
    <RetainedRole>md:AttributeAuthorityDescriptor</RetainedRole>
  </MetadataFilter>
 
  <!--
    Hide all IdPs with the hide-from-discovery entity attribute.
    This filter has no effect if your app has no discovery interface.
    Note: Hiding an IdP from the discovery interface does NOT prevent
    the SP from accepting an assertion from the IdP.
  -->
  <DiscoveryFilter type="Blacklist" matcher="EntityAttributes" trimTags="true"
      attributeName="http://macedir.org/entity-category"
      attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
      attributeValue="http://refeds.org/category/hide-from-discovery"/>
 
</MetadataProvider>

        <!-- Attribute and trust options you shouldn't need to change. -->
        <AttributeExtractor type="XML" validate="true" path="attribute-map.xml"/>
        <AttributeResolver type="Query" subjectMatch="true"/>
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Your SP generated these credentials.  They're used to talk to IdP's. -->
        <CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

    </ApplicationDefaults>

    <!-- Security policies you shouldn't change unless you know what you're doing. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
